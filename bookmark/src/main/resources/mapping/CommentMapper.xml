<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bookmark.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.bookmark.entity.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="collect_id" property="collectId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="reply_user_id" property="replyUserId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bookmark.entity.Comment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, collect_id, create_time, reply_user_id, user_id
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
  select
  <include refid="Base_Column_List" />
  ,
  <include refid="Blob_Column_List" />
  from comment
  where id = #{id,jdbcType=BIGINT}
</select>

  <select id="getCommentCountByCollectId" resultType="java.lang.Integer" parameterType="java.lang.Long" >
    select
    count(*)
    from comment
    where collect_id = #{collectId,jdbcType=BIGINT}
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bookmark.entity.Comment"  useGeneratedKeys="true" keyProperty="id">
    insert into comment (id, collect_id, create_time, 
      reply_user_id, user_id, content
      )
    values (#{id,jdbcType=BIGINT}, #{collectId,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, 
      #{replyUserId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bookmark.entity.Comment" >
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="collectId != null" >
        collect_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="replyUserId != null" >
        reply_user_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="collectId != null" >
        #{collectId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="replyUserId != null" >
        #{replyUserId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookmark.entity.Comment" >
    update comment
    <set >
      <if test="collectId != null" >
        collect_id = #{collectId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="replyUserId != null" >
        reply_user_id = #{replyUserId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bookmark.entity.Comment" >
    update comment
    set collect_id = #{collectId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      reply_user_id = #{replyUserId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookmark.entity.Comment" >
    update comment
    set collect_id = #{collectId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      reply_user_id = #{replyUserId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>