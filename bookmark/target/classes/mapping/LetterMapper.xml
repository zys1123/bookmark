<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bookmark.mapper.LetterMapper" >
  <resultMap id="BaseResultMap" type="com.bookmark.entity.Letter" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="pid" property="pid" jdbcType="BIGINT" />
    <result column="receive_user_id" property="receiveUserId" jdbcType="BIGINT" />
    <result column="send_user_id" property="sendUserId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bookmark.entity.Letter" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_time, pid, receive_user_id, send_user_id, type
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from letter
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from letter
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bookmark.entity.Letter"  useGeneratedKeys="true" keyProperty="id">
    insert into letter (id, create_time, pid, 
      receive_user_id, send_user_id, type, 
      content)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, 
      #{receiveUserId,jdbcType=BIGINT}, #{sendUserId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bookmark.entity.Letter" >
    insert into letter
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="receiveUserId != null" >
        receive_user_id,
      </if>
      <if test="sendUserId != null" >
        send_user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="receiveUserId != null" >
        #{receiveUserId,jdbcType=BIGINT},
      </if>
      <if test="sendUserId != null" >
        #{sendUserId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookmark.entity.Letter" >
    update letter
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="receiveUserId != null" >
        receive_user_id = #{receiveUserId,jdbcType=BIGINT},
      </if>
      <if test="sendUserId != null" >
        send_user_id = #{sendUserId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bookmark.entity.Letter" >
    update letter
    set create_time = #{createTime,jdbcType=BIGINT},
      pid = #{pid,jdbcType=BIGINT},
      receive_user_id = #{receiveUserId,jdbcType=BIGINT},
      send_user_id = #{sendUserId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookmark.entity.Letter" >
    update letter
    set create_time = #{createTime,jdbcType=BIGINT},
      pid = #{pid,jdbcType=BIGINT},
      receive_user_id = #{receiveUserId,jdbcType=BIGINT},
      send_user_id = #{sendUserId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>